1. Every function should be preceded by a comment describing the function's purpose.

2. Add a comment right to the line containing the right brace, }, that closes every function, including main.

3. Indent the entire body of each function one level of indentation within the braces that define tha body of the function,
This indentation emphasises the functional structure of the programs and helps make them easier to read.

4. Set a convetion for the indentation size you prefer and then uniformly apply that convetion.

5. Choosing meaningful variable names helps to make a program self-documenting---that is, fewer comments are needed.

6. The first letter of an identifier used as simple variable name should be a lowercase letter.
Later in the text we'll assign special significance to identifier that begin with a capital letter and to identifier that use all capital letter.

7. Multiple-word variable names can help make a program more readable. 
  Seprate the words with underscore as in total_commision, or, if you can run the word together,
  begin each word after the first with a capital letter as in totalCommision.

8. Place a space after each comma to make program more readable

9. Place spaces on either side of a binary operator.
This makes the operator stand out and makes the program more readable. 

10. A lengthy statement may be spread over sevral lines.
If a statement must be split across lines, choose breaking points that make sense . 
If a statement is split across two or more lines, indent all subsequent lines.
It's not correct to split identifier.

11. Refer to the operator precedence chart when writing expression containing manu operators. 
Confirm that the expression are applied in the proper order. 
If you're uncertain about the order of evaluation in a complex expression,
  use parentheses to group expression or break the statement into serveral simpler statement.
Be sure to observe that some of C's operator such as the assignment operator (=) associate from right to left rather then left to right.
